{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet timerInterval = null;\nconst button = document.querySelector(\"button\");\nconst calendarElement = document.querySelector(\"#datetime-picker\");\nconst spanText = document.querySelectorAll(\".value\");\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        userSelectedDate = selectedDate;\n\n        if (selectedDate && selectedDate.getTime() > new Date().getTime()) {\n            button.disabled = false;\n        } else {\n            button.disabled = true;\n            calendarElement.disabled = false;\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n                position: 'center',\n            });\n        }\n    },\n};\n\nflatpickr(calendarElement, options);\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nbutton.addEventListener('click', (event) => {\n    event.preventDefault();\n\n    if (timerInterval) clearInterval(timerInterval);\n    calendarElement.disabled = true;\n    button.disabled = true;\n\n    timerInterval = setInterval(() => {\n        const now = new Date();\n        const diff = userSelectedDate - now;\n\n        if (diff <= 0) {\n            clearInterval(timerInterval);\n            spanText.forEach(span => span.textContent = '00');\n            calendarElement.disabled = false;\n        } else {\n            const { days, hours, minutes, seconds } = convertMs(diff);\n            spanText[0].textContent = days.toString().padStart(2, '0');\n            spanText[1].textContent = hours.toString().padStart(2, '0');\n            spanText[2].textContent = minutes.toString().padStart(2, '0');\n            spanText[3].textContent = seconds.toString().padStart(2, '0');\n        }\n    }, 1000);\n});"],"names":["userSelectedDate","timerInterval","button","calendarElement","spanText","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","event","diff","span"],"mappings":"2GAKA,IAAIA,EAAmB,KACnBC,EAAgB,KACpB,MAAMC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAkB,SAAS,cAAc,kBAAkB,EAC3DC,EAAW,SAAS,iBAAiB,QAAQ,EAE7CC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EACpCN,EAAmBO,EAEfA,GAAgBA,EAAa,QAAO,EAAK,IAAI,KAAI,EAAG,UACpDL,EAAO,SAAW,IAElBA,EAAO,SAAW,GAClBC,EAAgB,SAAW,GAC3BK,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,QAC1B,CAAa,EAER,CACL,EAEAC,EAAUN,EAAiBE,CAAO,EAElC,SAASK,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEAb,EAAO,iBAAiB,QAAUc,GAAU,CACxCA,EAAM,eAAc,EAEhBf,GAAe,cAAcA,CAAa,EAC9CE,EAAgB,SAAW,GAC3BD,EAAO,SAAW,GAElBD,EAAgB,YAAY,IAAM,CAE9B,MAAMgB,EAAOjB,EADD,IAAI,KAGhB,GAAIiB,GAAQ,EACR,cAAchB,CAAa,EAC3BG,EAAS,QAAQc,GAAQA,EAAK,YAAc,IAAI,EAChDf,EAAgB,SAAW,OACxB,CACH,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAI,EACxDb,EAAS,CAAC,EAAE,YAAcQ,EAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACzDR,EAAS,CAAC,EAAE,YAAcS,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1DT,EAAS,CAAC,EAAE,YAAcU,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5DV,EAAS,CAAC,EAAE,YAAcW,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC/D,CACJ,EAAE,GAAI,CACX,CAAC"}